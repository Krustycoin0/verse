version: "3"

services:
  db:
    container_name: db
    image: mysql:8
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 3306:3306
      - 33060:33060
    volumes:
      - db:/var/lib/mysql
    working_dir: /var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --lower_case_table_names=1

  # ipfs:
  #   container_name: ipfs
  #   build:
  #     context: .
  #     dockerfile: ./docker/ipfs.Dockerfile
  #   restart: unless-stopped
  #   ports:
  #     - 5001:5001
  #     - 8080:8080
  #   volumes:
  #     - ipfs:/data/ipfs

  minio:
    container_name: minio
    image: minio/minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${S3_SECRET}
    ports:
      - 9000:9000
      - 9090:9090
    volumes:
      - minio:/data
    command: server /data --console-address ":9090"

  minio-init:
    container_name: minio-init
    image: minio/mc
    depends_on:
      - minio
    entrypoint:
      - /bin/sh
      - -c
      - |
        /usr/bin/mc alias set myminio http://minio:9000 ${S3_ACCESS_KEY_ID} ${S3_SECRET};
        /usr/bin/mc mb myminio/${S3_BUCKET};
        /usr/bin/mc policy set public myminio/${S3_BUCKET};

  turbo:
    container_name: turbo
    build:
      context: .
      dockerfile: ./docker/turbo.Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - db
      # - ipfs
      - minio
    ports:
      - 3000:3000/tcp
      - 3000:3000/udp
      - 4000:4000
      - ${RTC_MIN_PORT}-${RTC_MAX_PORT}:${RTC_MIN_PORT}-${RTC_MAX_PORT}/tcp
      - ${RTC_MIN_PORT}-${RTC_MAX_PORT}:${RTC_MIN_PORT}-${RTC_MAX_PORT}/udp
    volumes:
      - ./apps:/app/apps
      - ./packages:/app/packages
      - turbo:/app/node_modules

volumes:
  db:
  # ipfs:
  minio:
  turbo:
